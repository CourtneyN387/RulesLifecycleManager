{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\n//eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function useMutation(service, _ref) {\n  _s();\n  let {\n    onError,\n    onSuccess\n  } = _ref;\n  const [isLoading, setIsLoading] = useState(false);\n  //eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const mutate = async props => {\n    setIsLoading(true);\n    /*\n    if (process.env.REACT_APP_USE_MOCKS) {\n      await until(500);\n      if (\n        !process.env.REACT_APP_MOCKS_CAN_FAIL ||\n        Math.round(Math.random() + 0.3)\n      ) {\n        onSuccess?.();\n      } else {\n        onError?.(\"The mock randomly returned an error!\");\n      }\n      setIsLoading(false);\n    } else {\n      */\n    service(props).then(() => {\n      onSuccess === null || onSuccess === void 0 ? void 0 : onSuccess();\n    }).catch(err => {\n      onError === null || onError === void 0 ? void 0 : onError((err === null || err === void 0 ? void 0 : err.message) || \"Error submitting the data\");\n    }).finally(() => {\n      setIsLoading(false);\n    });\n    // }\n  };\n\n  return {\n    mutate,\n    isLoading\n  };\n}\n_s(useMutation, \"EmvgwIb3cHpoFpeP+WmEDbjx4y4=\");","map":{"version":3,"names":["useState","useMutation","service","_ref","_s","onError","onSuccess","isLoading","setIsLoading","mutate","props","then","catch","err","message","finally"],"sources":["/Users/courtneynguyen2/Documents/lifecycle-manager-frontend/src/hooks/useMutation.tsx"],"sourcesContent":["import { useState } from \"react\";\n\ntype UseAddRuleProps = {\n  onError?: (message: string) => void;\n  onSuccess?: () => void;\n};\n\n//eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function useMutation<T extends (e: any) => Promise<unknown>>(\n  service: T,\n  { onError, onSuccess }: UseAddRuleProps\n) {\n  const [isLoading, setIsLoading] = useState(false);\n  //eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const mutate = async (props: any) => {\n    setIsLoading(true);\n    /*\n    if (process.env.REACT_APP_USE_MOCKS) {\n      await until(500);\n      if (\n        !process.env.REACT_APP_MOCKS_CAN_FAIL ||\n        Math.round(Math.random() + 0.3)\n      ) {\n        onSuccess?.();\n      } else {\n        onError?.(\"The mock randomly returned an error!\");\n      }\n      setIsLoading(false);\n    } else {\n      */\n    service(props)\n      .then(() => {\n        onSuccess?.();\n      })\n      .catch((err) => {\n        onError?.(err?.message || \"Error submitting the data\");\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n    // }\n  };\n  return { mutate, isLoading };\n}\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAOhC;AACA,OAAO,SAASC,WAAWA,CACzBC,OAAU,EAAAC,IAAA,EAEV;EAAAC,EAAA;EAAA,IADA;IAAEC,OAAO;IAAEC;EAA2B,CAAC,GAAAH,IAAA;EAEvC,MAAM,CAACI,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD;EACA,MAAMS,MAAM,GAAG,MAAOC,KAAU,IAAK;IACnCF,YAAY,CAAC,IAAI,CAAC;IAClB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACIN,OAAO,CAACQ,KAAK,CAAC,CACXC,IAAI,CAAC,MAAM;MACVL,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAG,CAAC;IACf,CAAC,CAAC,CACDM,KAAK,CAAEC,GAAG,IAAK;MACdR,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAG,CAAAQ,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEC,OAAO,KAAI,2BAA2B,CAAC;IACxD,CAAC,CAAC,CACDC,OAAO,CAAC,MAAM;MACbP,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;IACJ;EACF,CAAC;;EACD,OAAO;IAAEC,MAAM;IAAEF;EAAU,CAAC;AAC9B;AAACH,EAAA,CAnCeH,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}