{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { getRules } from \"../services/get-rules\";\nexport const useGetRules = _ref => {\n  _s();\n\n  let {\n    onError\n  } = _ref;\n  const [isLoading, setIsLoading] = useState(true);\n  const [rules, setRules] = useState();\n\n  const handleSuccess = data => {\n    setRules(data);\n    setIsLoading(false);\n  };\n\n  const handleError = () => {\n    setIsLoading(false);\n    onError === null || onError === void 0 ? void 0 : onError();\n  };\n\n  useEffect(() => {\n    // if (process.env.REACT_APP_USE_MOCKS === \"TRUE\") {\n    //   if (\n    //     !process.env.REACT_APP_MOCKS_CAN_FAIL ||\n    //     Math.round(Math.random() + 0.3)\n    //   ) {\n    //     handleSuccess(mockData);\n    //   } else {\n    //     handleError();\n    //   }\n    // } else {\n    getRules().then(r => {\n      handleSuccess(r.data.rules);\n    }).catch(() => {\n      handleError();\n    }); // }\n  }, []);\n  return {\n    rules,\n    isLoading\n  };\n};\n\n_s(useGetRules, \"hdgvZMMZr5S99WDlfcDTL/RHg+U=\");","map":{"version":3,"names":["useEffect","useState","getRules","useGetRules","onError","isLoading","setIsLoading","rules","setRules","handleSuccess","data","handleError","then","r","catch"],"sources":["/Users/courtneynguyen2/Documents/git/lifecycle-manager-frontend/src/hooks/useGetRules.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { getRules } from \"../services/get-rules\";\nimport { Rule } from \"../types/Rule\";\n\nexport type UseGetRulesProps = {\n  onError?: () => void;\n};\n\nexport const useGetRules = ({ onError }: UseGetRulesProps) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [rules, setRules] = useState<Rule[]>();\n\n  const handleSuccess = (data: Rule[]) => {\n    setRules(data);\n    setIsLoading(false);\n  };\n\n  const handleError = () => {\n    setIsLoading(false);\n    onError?.();\n  };\n\n  useEffect(() => {\n    // if (process.env.REACT_APP_USE_MOCKS === \"TRUE\") {\n    //   if (\n    //     !process.env.REACT_APP_MOCKS_CAN_FAIL ||\n    //     Math.round(Math.random() + 0.3)\n    //   ) {\n    //     handleSuccess(mockData);\n    //   } else {\n    //     handleError();\n    //   }\n    // } else {\n    getRules()\n      .then((r) => {\n        handleSuccess(r.data.rules);\n      })\n      .catch(() => {\n        handleError();\n      });\n    // }\n  }, []);\n\n  return { rules, isLoading };\n};\n"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,uBAAzB;AAOA,OAAO,MAAMC,WAAW,GAAG,QAAmC;EAAA;;EAAA,IAAlC;IAAEC;EAAF,CAAkC;EAC5D,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,EAAlC;;EAEA,MAAMQ,aAAa,GAAIC,IAAD,IAAkB;IACtCF,QAAQ,CAACE,IAAD,CAAR;IACAJ,YAAY,CAAC,KAAD,CAAZ;EACD,CAHD;;EAKA,MAAMK,WAAW,GAAG,MAAM;IACxBL,YAAY,CAAC,KAAD,CAAZ;IACAF,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO;EACR,CAHD;;EAKAJ,SAAS,CAAC,MAAM;IACd;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAE,QAAQ,GACLU,IADH,CACSC,CAAD,IAAO;MACXJ,aAAa,CAACI,CAAC,CAACH,IAAF,CAAOH,KAAR,CAAb;IACD,CAHH,EAIGO,KAJH,CAIS,MAAM;MACXH,WAAW;IACZ,CANH,EAXc,CAkBd;EACD,CAnBQ,EAmBN,EAnBM,CAAT;EAqBA,OAAO;IAAEJ,KAAF;IAASF;EAAT,CAAP;AACD,CApCM;;GAAMF,W"},"metadata":{},"sourceType":"module"}