{"ast":null,"code":"var _jsxFileName = \"/Users/courtneynguyen2/Documents/lifecycle-manager-frontend/src/pages/ViewRules/ViewRules.tsx\",\n  _s = $RefreshSig$();\n// import {\n//   Button,\n//   Table,\n//   TableContainer,\n//   Tbody,\n//   Td,\n//   Th,\n//   Thead,\n//   Tr,\n// } from \"@chakra-ui/react\";\n// import { useGetRules } from \"../../hooks/useGetRules\";\n// import { useNavigate } from \"react-router-dom\";\n// import { routes } from \"../../config/routes\";\n\n// const tableHeaders = [\n//   \"Ruleset\",\n//   \"Name\",\n//   \"Description\",\n//   \"Active\",\n//   \"ID\",\n//   \"Actions\",\n// ];\n// export function ViewRules() {\n//   const { rules, isLoading } = useGetRules({});\n//   const navigate = useNavigate();\n\n//   if (isLoading) return <div>loading...</div>;\n\n//   if (!rules) return <div>There was a problem loading the rules</div>;\n\n//   return (\n//     <TableContainer>\n//       <Table variant=\"striped\">\n//         <Thead>\n//           {tableHeaders.map((header) => (\n//             <Th textAlign=\"left\" fontSize=\"large\">\n//               {header}\n//             </Th>\n//           ))}\n//         </Thead>\n//         <Tbody>\n//           {rules.map((rule) => (\n//             <Tr key={rule.id}>\n//               <Td>{rule.set}</Td>\n//               <Td>{rule.name}</Td>\n//               <Td>{rule.description}</Td>\n//               <Td>{String(rule.active)}</Td>\n//               <Td>{rule.id}</Td>\n//               <Td>\n//                 <Button onClick={() => navigate(routes.UpdateRule)}>\n//                   Update\n//                 </Button>\n//               </Td>\n//             </Tr>\n//           ))}\n//         </Tbody>\n//       </Table>\n//     </TableContainer>\n//   );\n// }\n\nimport React from \"react\";\nimport { Button, Table, TableContainer, Tbody, Td, Th, Thead, Tr } from \"@chakra-ui/react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { routes } from \"../../config/routes\";\nimport mockData from \"../../mock-data.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tableHeaders = [\"Ruleset\", \"Name\", \"Description\", \"Active\", \"ID\", \"Actions\"];\nexport function ViewRules() {\n  _s();\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      variant: \"striped\",\n      children: [/*#__PURE__*/_jsxDEV(Thead, {\n        children: tableHeaders.map(header => /*#__PURE__*/_jsxDEV(Th, {\n          textAlign: \"left\",\n          fontSize: \"large\",\n          children: header\n        }, header, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tbody, {\n        children: mockData.map(rule => /*#__PURE__*/_jsxDEV(Tr, {\n          children: [/*#__PURE__*/_jsxDEV(Td, {\n            children: rule.set\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Td, {\n            children: rule.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Td, {\n            children: rule.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Td, {\n            children: String(rule.active)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Td, {\n            children: rule.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Td, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => navigate(routes.UpdateRule),\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)]\n        }, rule.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(ViewRules, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = ViewRules;\nvar _c;\n$RefreshReg$(_c, \"ViewRules\");","map":{"version":3,"names":["React","Button","Table","TableContainer","Tbody","Td","Th","Thead","Tr","useNavigate","routes","mockData","jsxDEV","_jsxDEV","tableHeaders","ViewRules","_s","navigate","children","variant","map","header","textAlign","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","rule","set","name","description","String","active","id","onClick","UpdateRule","_c","$RefreshReg$"],"sources":["/Users/courtneynguyen2/Documents/lifecycle-manager-frontend/src/pages/ViewRules/ViewRules.tsx"],"sourcesContent":["// import {\n//   Button,\n//   Table,\n//   TableContainer,\n//   Tbody,\n//   Td,\n//   Th,\n//   Thead,\n//   Tr,\n// } from \"@chakra-ui/react\";\n// import { useGetRules } from \"../../hooks/useGetRules\";\n// import { useNavigate } from \"react-router-dom\";\n// import { routes } from \"../../config/routes\";\n\n// const tableHeaders = [\n//   \"Ruleset\",\n//   \"Name\",\n//   \"Description\",\n//   \"Active\",\n//   \"ID\",\n//   \"Actions\",\n// ];\n// export function ViewRules() {\n//   const { rules, isLoading } = useGetRules({});\n//   const navigate = useNavigate();\n\n//   if (isLoading) return <div>loading...</div>;\n\n//   if (!rules) return <div>There was a problem loading the rules</div>;\n\n//   return (\n//     <TableContainer>\n//       <Table variant=\"striped\">\n//         <Thead>\n//           {tableHeaders.map((header) => (\n//             <Th textAlign=\"left\" fontSize=\"large\">\n//               {header}\n//             </Th>\n//           ))}\n//         </Thead>\n//         <Tbody>\n//           {rules.map((rule) => (\n//             <Tr key={rule.id}>\n//               <Td>{rule.set}</Td>\n//               <Td>{rule.name}</Td>\n//               <Td>{rule.description}</Td>\n//               <Td>{String(rule.active)}</Td>\n//               <Td>{rule.id}</Td>\n//               <Td>\n//                 <Button onClick={() => navigate(routes.UpdateRule)}>\n//                   Update\n//                 </Button>\n//               </Td>\n//             </Tr>\n//           ))}\n//         </Tbody>\n//       </Table>\n//     </TableContainer>\n//   );\n// }\n\nimport React from \"react\";\nimport {\n  Button,\n  Table,\n  TableContainer,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from \"@chakra-ui/react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { routes } from \"../../config/routes\";\nimport mockData from \"../../mock-data.json\";\n\nconst tableHeaders = [\n  \"Ruleset\",\n  \"Name\",\n  \"Description\",\n  \"Active\",\n  \"ID\",\n  \"Actions\",\n];\n\nexport function ViewRules() {\n  const navigate = useNavigate();\n\n  return (\n    <TableContainer>\n      <Table variant=\"striped\">\n        <Thead>\n          {tableHeaders.map((header) => (\n            <Th textAlign=\"left\" fontSize=\"large\" key={header}>\n              {header}\n            </Th>\n          ))}\n        </Thead>\n        <Tbody>\n          {mockData.map((rule) => (\n            <Tr key={rule.id}>\n              <Td>{rule.set}</Td>\n              <Td>{rule.name}</Td>\n              <Td>{rule.description}</Td>\n              <Td>{String(rule.active)}</Td>\n              <Td>{rule.id}</Td>\n              <Td>\n                <Button onClick={() => navigate(routes.UpdateRule)}>\n                  Update\n                </Button>\n              </Td>\n            </Tr>\n          ))}\n        </Tbody>\n      </Table>\n    </TableContainer>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}