{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { getRules } from \"../services/get-rules\";\nexport const useGetRules = _ref => {\n  _s();\n  let {\n    onError\n  } = _ref;\n  const [isLoading, setIsLoading] = useState(true);\n  const [rules, setRules] = useState();\n  const handleSuccess = data => {\n    setRules(data);\n    setIsLoading(false);\n  };\n  const handleError = () => {\n    setIsLoading(false);\n    onError === null || onError === void 0 ? void 0 : onError();\n  };\n  useEffect(() => {\n    // if (process.env.REACT_APP_USE_MOCKS === \"TRUE\") {\n    //   if (\n    //     !process.env.REACT_APP_MOCKS_CAN_FAIL ||\n    //     Math.round(Math.random() + 0.3)\n    //   ) {\n    //     handleSuccess(mockData);\n    //   } else {\n    //     handleError();\n    //   }\n    // } else {\n    getRules().then(r => {\n      handleSuccess(r.data.rules);\n    }).catch(() => {\n      handleError();\n    });\n    // }\n  }, []);\n  return {\n    rules,\n    isLoading\n  };\n};\n_s(useGetRules, \"hdgvZMMZr5S99WDlfcDTL/RHg+U=\");","map":{"version":3,"names":["useEffect","useState","getRules","useGetRules","_ref","_s","onError","isLoading","setIsLoading","rules","setRules","handleSuccess","data","handleError","then","r","catch"],"sources":["/Users/courtneynguyen2/Documents/git/lifecycle-manager-frontend/src/hooks/useGetRules.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { getRules } from \"../services/get-rules\";\nimport { Rule } from \"../types/Rule\";\n\nexport type UseGetRulesProps = {\n  onError?: () => void;\n};\n\nexport const useGetRules = ({ onError }: UseGetRulesProps) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [rules, setRules] = useState<Rule[]>();\n\n  const handleSuccess = (data: Rule[]) => {\n    setRules(data);\n    setIsLoading(false);\n  };\n\n  const handleError = () => {\n    setIsLoading(false);\n    onError?.();\n  };\n\n  useEffect(() => {\n    // if (process.env.REACT_APP_USE_MOCKS === \"TRUE\") {\n    //   if (\n    //     !process.env.REACT_APP_MOCKS_CAN_FAIL ||\n    //     Math.round(Math.random() + 0.3)\n    //   ) {\n    //     handleSuccess(mockData);\n    //   } else {\n    //     handleError();\n    //   }\n    // } else {\n    getRules()\n      .then((r) => {\n        handleSuccess(r.data.rules);\n      })\n      .catch(() => {\n        handleError();\n      });\n    // }\n  }, []);\n\n  return { rules, isLoading };\n};\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,QAAQ,QAAQ,uBAAuB;AAOhD,OAAO,MAAMC,WAAW,GAAGC,IAAA,IAAmC;EAAAC,EAAA;EAAA,IAAlC;IAAEC;EAA0B,CAAC,GAAAF,IAAA;EACvD,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAS,CAAC;EAE5C,MAAMU,aAAa,GAAIC,IAAY,IAAK;IACtCF,QAAQ,CAACE,IAAI,CAAC;IACdJ,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMK,WAAW,GAAGA,CAAA,KAAM;IACxBL,YAAY,CAAC,KAAK,CAAC;IACnBF,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAG,CAAC;EACb,CAAC;EAEDN,SAAS,CAAC,MAAM;IACd;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAE,QAAQ,CAAC,CAAC,CACPY,IAAI,CAAEC,CAAC,IAAK;MACXJ,aAAa,CAACI,CAAC,CAACH,IAAI,CAACH,KAAK,CAAC;IAC7B,CAAC,CAAC,CACDO,KAAK,CAAC,MAAM;MACXH,WAAW,CAAC,CAAC;IACf,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEJ,KAAK;IAAEF;EAAU,CAAC;AAC7B,CAAC;AAACF,EAAA,CApCWF,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}