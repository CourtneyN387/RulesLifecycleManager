{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n//eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function useMutation(service, _ref) {\n  _s();\n\n  let {\n    onError,\n    onSuccess\n  } = _ref;\n  const [isLoading, setIsLoading] = useState(false); //eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  const mutate = async props => {\n    setIsLoading(true);\n    /*\n    if (process.env.REACT_APP_USE_MOCKS) {\n      await until(500);\n      if (\n        !process.env.REACT_APP_MOCKS_CAN_FAIL ||\n        Math.round(Math.random() + 0.3)\n      ) {\n        onSuccess?.();\n      } else {\n        onError?.(\"The mock randomly returned an error!\");\n      }\n      setIsLoading(false);\n    } else {\n      */\n\n    service(props).then(() => {\n      onSuccess === null || onSuccess === void 0 ? void 0 : onSuccess();\n    }).catch(err => {\n      onError === null || onError === void 0 ? void 0 : onError((err === null || err === void 0 ? void 0 : err.message) || \"Error submitting the data\");\n    }).finally(() => {\n      setIsLoading(false);\n    }); // }\n  };\n\n  return {\n    mutate,\n    isLoading\n  };\n}\n\n_s(useMutation, \"EmvgwIb3cHpoFpeP+WmEDbjx4y4=\");","map":{"version":3,"names":["useState","useMutation","service","onError","onSuccess","isLoading","setIsLoading","mutate","props","then","catch","err","message","finally"],"sources":["/Users/courtneynguyen2/Documents/git/lifecycle-manager-frontend/src/hooks/useMutation.tsx"],"sourcesContent":["import { useState } from \"react\";\n\ntype UseAddRuleProps = {\n  onError?: (message: string) => void;\n  onSuccess?: () => void;\n};\n\n//eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function useMutation<T extends (e: any) => Promise<unknown>>(\n  service: T,\n  { onError, onSuccess }: UseAddRuleProps\n) {\n  const [isLoading, setIsLoading] = useState(false);\n  //eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const mutate = async (props: any) => {\n    setIsLoading(true);\n    /*\n    if (process.env.REACT_APP_USE_MOCKS) {\n      await until(500);\n      if (\n        !process.env.REACT_APP_MOCKS_CAN_FAIL ||\n        Math.round(Math.random() + 0.3)\n      ) {\n        onSuccess?.();\n      } else {\n        onError?.(\"The mock randomly returned an error!\");\n      }\n      setIsLoading(false);\n    } else {\n      */\n    service(props)\n      .then(() => {\n        onSuccess?.();\n      })\n      .catch((err) => {\n        onError?.(err?.message || \"Error submitting the data\");\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n    // }\n  };\n  return { mutate, isLoading };\n}\n"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAOA;AACA,OAAO,SAASC,WAAT,CACLC,OADK,QAGL;EAAA;;EAAA,IADA;IAAEC,OAAF;IAAWC;EAAX,CACA;EACA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C,CADA,CAEA;;EACA,MAAMO,MAAM,GAAG,MAAOC,KAAP,IAAsB;IACnCF,YAAY,CAAC,IAAD,CAAZ;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACIJ,OAAO,CAACM,KAAD,CAAP,CACGC,IADH,CACQ,MAAM;MACVL,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS;IACV,CAHH,EAIGM,KAJH,CAIUC,GAAD,IAAS;MACdR,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAG,CAAAQ,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEC,OAAL,KAAgB,2BAAnB,CAAP;IACD,CANH,EAOGC,OAPH,CAOW,MAAM;MACbP,YAAY,CAAC,KAAD,CAAZ;IACD,CATH,EAhBmC,CA0BnC;EACD,CA3BD;;EA4BA,OAAO;IAAEC,MAAF;IAAUF;EAAV,CAAP;AACD;;GAnCeJ,W"},"metadata":{},"sourceType":"module"}